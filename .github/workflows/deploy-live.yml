name: Deploy to Production

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    concurrency:
      group: deploy-production-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Brauchen 2 Commits für Git-Diff
          show-progress: false

      - name: 🌐 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci --no-fund --no-audit --prefer-offline --progress=false

      - name: 🔧 Create .env file
        run: |
          cat > .env << EOL
          NEXT_PUBLIC_APP_URL=${{ secrets.PRODUCTION_APP_URL }}
          NEXT_PUBLIC_ENVIRONMENT=production
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          SMTP_USER=${{ secrets.SMTP_USER }}
          SMTP_PASS=${{ secrets.SMTP_PASS }}
          SMTP_FROM=${{ secrets.SMTP_FROM }}
          CONTACT_EMAIL=${{ secrets.CONTACT_EMAIL }}
          FTP_SERVER=${{ secrets.PRODUCTION_FTP_SERVER }}
          FTP_USERNAME=${{ secrets.PRODUCTION_FTP_USERNAME }}
          FTP_PASSWORD=${{ secrets.PRODUCTION_FTP_PASSWORD }}
          ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          CUSTOMER_USERNAME=${{ secrets.CUSTOMER_USERNAME }}
          CUSTOMER_PASSWORD=${{ secrets.CUSTOMER_PASSWORD }}
          EOL

      - name: 🚧 Aktiviere Wartungsmodus
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd callflows.de/
            touch .maintenance

      - name: 🗄️ Backup
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd callflows.de/
            timestamp=$(date +%Y%m%d_%H%M%S)
            mkdir -p backups
            # Backup aller Dateien außer Backups und Logs
            tar -czf backups/backup-${timestamp}.tar.gz --exclude='backups' --exclude='logs' --exclude='.maintenance' . || true
            # Nur die letzten 10 Backups behalten (Production)
            ls -t backups/backup-*.tar.gz | tail -n +11 | xargs rm -f || true

      - name: 🏗️ Build
        run: npm run build

      - name: 🧹 Empty remote directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd callflows.de/
            rm -rf * .env
            mkdir -p logs/contact-form
            chmod -R 755 logs
            touch logs/contact-form/contact-form.log
            chmod 666 logs/contact-form/contact-form.log

      - name: 📤 Deploy to Production
        env:
          FTP_SERVER: ${{ secrets.PRODUCTION_FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.PRODUCTION_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.PRODUCTION_FTP_PASSWORD }}
          NODE_ENV: production
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_BEFORE: ${{ github.event.before }}
        run: |
          node scripts/ci-fast-deploy.js
      - name: 🧹 Clean temporary files
        run: |
          rm -rf out
          rm -f .deploy-checksums.json

      - name: 🟢 Deaktiviere Wartungsmodus
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd callflows.de/
            rm -f .maintenance

