name: Deploy to Staging

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    concurrency:
      group: deploy-staging-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v3

      - name: 🌐 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Create .env file
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.STAGING_API_URL }}" >> .env
          echo "NEXT_PUBLIC_ENVIRONMENT=staging" >> .env

      - name: 🚧 Backup remote directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /var/www/staging
            tar -czf backup-$(date +%Y%m%d_%H%M%S).tar.gz ./out

      - name: 🏗️ Build
        run: npm run build

      - name: 📤 Deploy to Staging
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.STAGING_FTP_SERVER }}
          username: ${{ secrets.STAGING_FTP_USERNAME }}
          password: ${{ secrets.STAGING_FTP_PASSWORD }}
          local-dir: ./out/
          server-dir: /staging/
          dangerous-clean-slate: true

      - name: 🧹 Clear CDN Cache
        run: |
          curl -X POST "${{ secrets.STAGING_CACHE_CLEAR_URL }}"
