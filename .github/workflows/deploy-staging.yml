name: Deploy to Staging

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    concurrency:
      group: deploy-staging-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: üõ†Ô∏è Checkout code
        uses: actions/checkout@v3

      - name: üåê Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: üßπ Clean npm cache
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: üì¶ Install dependencies
        run: |
          npm install --no-fund
          npm audit fix --force || true

      - name: üîß Create .env file
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.STAGING_API_URL }}" >> .env
          echo "NEXT_PUBLIC_ENVIRONMENT=staging" >> .env
          echo "DB_HOST=${{ secrets.STAGING_DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.STAGING_DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.STAGING_DB_PASS }}" >> .env
          echo "DB_NAME=${{ secrets.STAGING_DB_NAME }}" >> .env

      - name: üöß Aktiviere Wartungsmodus
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd staging.callflows.de
            touch .maintenance

      - name: üóÑÔ∏è Backup und DB Reset
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd staging.callflows.de
            timestamp=$(date +%Y%m%d_%H%M%S)
            mkdir -p backups
            
            if [ -d "./out" ]; then
              tar -czf backups/backup-${timestamp}.tar.gz ./out
            fi

            # Admin-User erstellen
            mysql -h ${{ secrets.STAGING_DB_HOST }} -u ${{ secrets.STAGING_DB_USER }} -p${{ secrets.STAGING_DB_PASS }} ${{ secrets.STAGING_DB_NAME }} -e "INSERT IGNORE INTO users (username, password, role) VALUES ('admin', '\$2y\$10\$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin');"

      - name: üèóÔ∏è Build
        run: npm run build

      - name: üì§ Deploy to Staging
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.STAGING_FTP_SERVER }}
          username: ${{ secrets.STAGING_FTP_USERNAME }}
          password: ${{ secrets.STAGING_FTP_PASSWORD }}
          local-dir: ./out/
          server-dir: /staging.callflows.de/
          dangerous-clean-slate: true

      - name: üßπ Clear CDN Cache
        run: |
          curl -X POST "${{ secrets.STAGING_CACHE_CLEAR_URL }}"

      - name: üü¢ Deaktiviere Wartungsmodus
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd staging.callflows.de
            rm -f .maintenance
